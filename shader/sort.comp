#version 460

#define FLT_MAX 3.402823466e+38

layout (binding=0) uniform Camera {
    mat4 model;
    mat4 view;
    mat4 proj;
    mat4 whole;
    mat4 inverseM;
    vec4 colorDepth;
} camera;
layout (binding=1) buffer Index {
    uvec4 data[];
} index;
layout (binding=2) buffer Vertex {
    vec4 vertexData[];
} vertex;
layout(binding=3) buffer block {
    uint toSort[];
};
layout(binding=4) buffer block2 {
    vec4 midpoints[];
};

layout(push_constant) uniform amount {
    uint k;
    uint j;
};

void compareAndSwap(uint v1, uint v2) {
    uint maxSize = toSort.length();
    if(maxSize <= v1 || maxSize <= v2)
        return;
    mat4 matrix =  camera.proj * camera.view * camera.model;
    vec4 value1 = matrix * midpoints[toSort[v1]];
    float z1 = value1.z / value1.w;
    vec4 value2 =  matrix * midpoints[toSort[v2]];
    float z2 = value2.z / value2.w;
    if(((v1 & k) == 0 && z1 <= z2) ||
       ((v1 & k) != 0 && z1 >= z2))
       return;
    uint temp = toSort[v1];
    toSort[v1] = toSort[v2];
    toSort[v2] = temp;
}

void main() {
    uint ij = gl_WorkGroupID.x ^ j;
    if (ij > gl_WorkGroupID.x) {
        compareAndSwap(gl_WorkGroupID.x, ij);
    }
}
